language: cpp
sudo: required

matrix:
  include:
    - os: linux
    - os: osx

addons:
  apt:
    update: true
    packages:
      - libsnappy-dev
      - binutils-dev
      - libffi-dev
      - libomp-dev
  homebrew:
    update: true
    packages:
      - snappy
      - binutils
      - libffi
      - libomp
      - cmake

before_install:
  # build and cache LLVM/Tapir:
  - |
    if [[ -z "$(ls -A ${TRAVIS_BUILD_DIR}/Tapir-LLVM)" ]]; then
      git clone -b release_60-release https://github.com/wsmoses/Tapir-LLVM ${TRAVIS_BUILD_DIR}/Tapir-LLVM
      mkdir ${TRAVIS_BUILD_DIR}/Tapir-LLVM/build
      cd ${TRAVIS_BUILD_DIR}/Tapir-LLVM/build
      if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
        export LLVM_BINUTILS_INCDIR=/usr/include
      elif [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
        export LLVM_BINUTILS_INCDIR=/usr/local/opt/binutils/include
      fi
      cmake .. -DLLVM_INCLUDE_TESTS=OFF \
               -DLLVM_ENABLE_RTTI=ON \
               -DCMAKE_BUILD_TYPE=Release \
               -DLLVM_TARGETS_TO_BUILD=host
      cmake --build .
      cd -
    fi

  # install OCaml:
  - export OCAML_VERSION=4.07
  - |
    if [[ -z "$(ls -A ${HOME}/.opam)" ]]; then
      wget https://raw.githubusercontent.com/ocaml/ocaml-ci-scripts/master/.travis-ocaml.sh
      bash -ex .travis-ocaml.sh
      opam update
      opam install -y ocamlfind core dune ctypes ctypes-foreign menhir ppx_deriving
      sudo cp /usr/local/bin/opam ${HOME}/.opam/
    else
      sudo cp ${HOME}/.opam/opam /usr/local/bin/
    fi
  - eval $(opam env)

install:
  # install Boehm GC:
  - git clone -b release-7_6 https://github.com/ivmai/bdwgc
  - cd bdwgc
  - git clone -b release-7_6 https://github.com/ivmai/libatomic_ops
  - ./autogen.sh
  - |
    ./configure CFLAGS="-fPIC" --enable-threads=posix \
                               --enable-cplusplus \
                               --enable-thread-local-alloc \
                               --enable-large-config
  - make LDFLAGS="-static"
  - make check
  - sudo make install
  - cd -

  # install htslib:
  - wget -c wget https://github.com/samtools/htslib/releases/download/1.9/htslib-1.9.tar.bz2 -O - | tar -xj
  - cd htslib-1.9
  - ./configure
  - make
  - sudo make install
  - cd -

before_script:
  - export SEQ_PATH="${TRAVIS_BUILD_DIR}/stdlib"
  - export PYTHONPATH="${TRAVIS_BUILD_DIR}/test/python"
  # ldconfig on linux:
  - if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then sudo ldconfig; fi
  # make sure we don't link against older system libffi on macOS:
  - if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then export LDFLAGS="-L/usr/local/opt/libffi/lib"; fi

script:
  - mkdir build
  - |
    (cd build && cmake .. -DSEQ_THREADED=ON \
                          -DLLVM_DIR=`${TRAVIS_BUILD_DIR}/Tapir-LLVM/build/bin/llvm-config --cmakedir` \
                          -DCMAKE_C_COMPILER=clang \
                          -DCMAKE_CXX_COMPILER=clang++)
  - cmake --build build
  - build/seqtest 2> /dev/null
  - build/seqc test/core/helloworld.seq

cache:
  timeout: 1000
  directories:
    - Tapir-LLVM
    - ${HOME}/.opam

branches:
  only:
    - master

notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/8bcb19a2bb1bab2a3b1b
    on_success: change
    on_failure: always
    on_start: never
    on_cancel: always
    on_error: always
  email: false
