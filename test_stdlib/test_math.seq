import math

NAN = math.nan
INF = math.inf
NINF = -math.inf

def test_isnan():
    assert math.isnan(float('nan')) == True
    assert math.isnan(4.0) == False

def test_isinf():
    assert math.isinf(float('inf')) == True
    assert math.isinf(7.0) == False

def test_isfinite():
    assert math.isfinite(1.4) == True
    assert math.isfinite(0.0) == True
    assert math.isfinite(NAN) == False
    assert math.isfinite(INF) == False
    assert math.isfinite(NINF) == False

def test_ceil():
    assert math.ceil(3.3) == 4
    assert math.ceil(0.5) == 1
    assert math.ceil(1.0) == 1
    assert math.ceil(1.5) == 2
    assert math.ceil(-0.5) == 0
    assert math.ceil(-1.0) == -1
    assert math.ceil(-1.5) == -1

def test_floor():
    assert math.floor(3.3) == 3
    assert math.floor(0.5) == 0
    assert math.floor(1.0) == 1
    assert math.floor(1.5) == 1
    assert math.floor(-0.5) == -1
    assert math.floor(-1.0) == -1
    assert math.floor(-1.5) == -2

def test_fabs():
    assert math.fabs(-1.0) == 1
    assert math.fabs(0.0) == 0
    assert math.fabs(1.0) == 1

def test_fmod():
    assert math.fmod(10.0, 1.0) == 0.0
    assert math.fmod(10.0, 0.5) == 0.0
    assert math.fmod(10.0, 1.5) == 1.0
    assert math.fmod(-10.0, 1.0) == -0.0
    assert math.fmod(-10.0, 0.5) == -0.0
    assert math.fmod(-10.0, 1.5) == -1.0

def test_exp():
    assert math.exp(0.0) == 1
    assert math.exp(-1.0) == 1/math.e
    assert math.exp(1.0) == math.e

def test_ldexp():
    assert math.ldexp(0.0, 1) == 0.0
    assert math.ldexp(1.0, 1) == 2.0
    assert math.ldexp(1.0, -1) == 0.5
    assert math.ldexp(-1.0, 1) == -2.0
    assert math.ldexp(0.0, 1) == 0.0
    assert math.ldexp(1.0, -1000000) == 0.0
    assert math.ldexp(-1.0, -1000000) == -0.0
    assert math.ldexp(INF, 30) == INF
    assert math.ldexp(NINF, -213) == NINF
    assert math.isnan(math.ldexp(NAN, 0)) == True

def test_log():
    assert math.log(1.0/math.e) == -1
    assert math.log(1.0) == 0
    assert math.log(math.e) == 1

def test_log10():
    assert math.log10(0.1) == -1
    assert math.log10(1.0) == 0
    assert math.log10(10.0) == 1
    assert math.log10(10000.0) == 4

def test_degrees():
    assert math.degrees(math.pi) == 180.0
    assert math.degrees(math.pi/2) == 90.0
    assert math.degrees(-math.pi/4) == -45.0
    assert math.degrees(0.0) == 0.0

def test_radians():
    assert math.radians(180.0) == math.pi
    assert math.radians(90.0) == math.pi/2
    assert math.radians(-45.0) == -math.pi/4
    assert math.radians(0.0) == 0.0

def test_sqrt():
    assert math.sqrt(4.0) == 2
    assert math.sqrt(0.0) == 0
    assert math.sqrt(1.0) == 1
    assert math.isnan(math.sqrt(-1.0)) == True

def test_pow():
    assert math.pow(0.0, 1.0) == 0
    assert math.pow(1.0, 0.0) == 1
    assert math.pow(2.0, 1.0) == 2
    assert math.pow(2.0, -1.0) == 0.5
    assert math.pow(-0.0, 3.0) == -0.0
    assert math.pow(-0.0, 2.3) == 0.0
    assert math.pow(-0.0, 0.0) == 1
    assert math.pow(-0.0, -0.0) == 1
    assert math.pow(-2.0, 2.0) == 4.0
    assert math.pow(-2.0, 3.0) == -8.0
    assert math.pow(-2.0, -3.0) == -0.125
    assert math.pow(INF, 1.0) == INF
    assert math.pow(NINF, 1.0) == NINF
    assert math.pow(1.0, INF) == 1
    assert math.pow(1.0, NINF) == 1
    assert math.isnan(math.pow(NAN, 1.0)) == True
    assert math.isnan(math.pow(2.0, NAN)) == True
    assert math.isnan(math.pow(0.0, NAN)) == True
    assert math.pow(1.0, NAN) == 1

def test_acos():
    assert math.acos(-1.0) == math.pi
    assert math.acos(0.0) == math.pi/2
    assert math.acos(1.0) == 0
    assert math.isnan(math.acos(NAN)) == True

def test_asin():
    assert math.asin(-1.0) == -math.pi/2
    assert math.asin(0.0) == 0
    assert math.asin(1.0) == math.pi/2
    assert math.isnan(math.asin(NAN)) == True

def test_atan():
    assert math.atan(-1.0) == -math.pi/4
    assert math.atan(0.0) == 0
    assert math.atan(1.0) == math.pi/4
    assert math.atan(INF) == math.pi/2
    assert math.atan(NINF) == -math.pi/2
    assert math.isnan(math.atan(NAN)) == True

def test_atan2():
    assert math.atan2(-1.0, 0.0) == -math.pi/2
    assert math.atan2(-1.0,1.0) == -math.pi/4
    assert math.atan2(0.0, 1.0) == 0
    assert math.atan2(1.0, 1.0) == math.pi/4
    assert math.atan2(1.0, 0.0) == math.pi/2
    assert math.atan2(-0.0, 0.0) == -0
    assert math.atan2(-0.0, 2.3) == -0
    assert math.atan2(0.0, -2.3) == math.pi
    assert math.atan2(INF, NINF) == math.pi*3/4
    assert math.atan2(INF, 2.3) == math.pi/2
    assert math.isnan(math.atan2(NAN, 0.0)) == True

def test_cos():
    assert math.cos(0.0) == 1
    assert math.cos(math.pi/2) == 6.123233995736766e-17
    assert math.cos(-math.pi/2) == 6.123233995736766e-17
    assert math.cos(math.pi) == -1
    assert math.isnan(math.cos(INF)) == True
    assert math.isnan(math.cos(NINF)) == True
    assert math.isnan(math.cos(NAN)) == True

def test_sin():
    assert math.sin(0.0) == 0
    assert math.sin(math.pi/2) == 1
    assert math.sin(-math.pi/2) == -1
    assert math.isnan(math.sin(INF)) == True
    assert math.isnan(math.sin(NINF)) == True
    assert math.isnan(math.sin(NAN)) == True

def test_hypot():
    assert math.hypot(12.0, 5.0) == 13
    assert math.hypot(12.0/32.0, 5.0/32) == 13/32
    assert math.hypot(0.0, 0.0) == 0
    assert math.hypot(-3.0, 4.0) == 5
    assert math.hypot(3.0, 4.0) == 5

def test_tan():
    assert math.tan(0.0) == 0
    assert math.tan(math.pi/4) == 0.9999999999999999
    assert math.tan(-math.pi/4) == -0.9999999999999999
    assert math.isnan(math.tan(INF)) == True
    assert math.isnan(math.tan(NINF)) == True
    assert math.isnan(math.tan(NAN)) == True

def test_cosh():
    assert math.cosh(0.0) == 1
    assert math.cosh(2.0)-2*math.cosh(1.0)**2 == -1
    assert math.cosh(INF) == INF
    assert math.cosh(NINF) == INF
    assert math.isnan(math.cosh(NAN)) == True

def test_sinh():
    assert math.sinh(0.0) == 0
    assert math.sinh(1.0) + math.sinh(-1.0) == 0
    assert math.sinh(INF) == INF
    assert math.sinh(NINF) == NINF
    assert math.isnan(math.sinh(NAN)) == True

def test_tanh():
    assert math.tanh(0.0) == 0
    assert math.tanh(1.0) + math.tanh(-1.0) == 0
    assert math.tanh(INF) == 1
    assert math.tanh(NINF) == -1
    assert math.isnan(math.tanh(NAN)) == True

def test_acosh():
    assert math.acosh(1.0) == 0
    assert math.acosh(2.0) == 1.3169578969248166
    assert math.acosh(INF) == INF
    assert math.isnan(math.acosh(NAN)) == True
    assert math.isnan(math.acosh(-1.0)) == True

def test_asinh():
    assert math.asinh(0.0) == 0
    assert math.asinh(1.0) == 0.881373587019543
    assert math.asinh(-1.0) == -0.881373587019543
    assert math.asinh(INF) == INF
    assert math.isnan(math.asinh(NAN)) == True
    assert math.asinh(NINF) == NINF

def test_atanh():
    assert math.atanh(0.0) == 0
    assert math.atanh(0.5) == 0.5493061443340549
    assert math.atanh(-0.5) == -0.5493061443340549
    assert math.isnan(math.atanh(INF)) == True
    assert math.isnan(math.atanh(NAN)) == True
    assert math.isnan(math.atanh(NINF)) == True

def test_copysign():
    assert math.copysign(1.0, -0.0) == -1
    assert math.copysign(1.0, 42.0) == 1
    assert math.copysign(1.0, -42.0) == -1
    assert math.copysign(3.0, 0.0) == 3
    assert math.copysign(INF, 0.0) == INF
    assert math.copysign(INF, -0.0) == NINF
    assert math.copysign(NINF, 0.0) == INF
    assert math.copysign(NINF, -0.0) == NINF
    assert math.copysign(1.0, INF) == 1
    assert math.copysign(1.0, NINF) == -1
    assert math.copysign(INF, INF) == INF
    assert math.copysign(INF, NINF) == NINF
    assert math.copysign(NINF, INF) == INF
    assert math.copysign(NINF, NINF) == NINF
    assert math.isnan(math.copysign(NAN, 1.0)) == True
    assert math.isnan(math.copysign(NAN, INF)) == True
    assert math.isnan(math.copysign(NAN, NINF)) == True
    assert math.isnan(math.copysign(NAN, NAN)) == True

def test_log1p():
    assert math.log1p(2.0) == 1.0986122886681098
    assert math.log1p(2.0**90) == 62.383246250395075
    assert math.log1p(2.0**300) == 207.94415416798358
    assert math.log1p(INF) == INF
    assert math.log1p(-1.0) == NINF

test_isnan()
test_isinf()
test_isfinite()
test_ceil()
test_floor()
test_fabs()
test_fmod()
test_exp()
test_ldexp()
test_log()
test_log10()
test_degrees()
test_radians()
test_sqrt()
test_pow()
test_acos()
test_asin()
test_atan()
test_atan2()
test_cos()
test_sin()
test_hypot()
test_tan()
test_cosh()
test_sinh()
test_tanh()
test_acosh()
test_asinh()
test_atanh()
test_copysign()
test_log1p()
