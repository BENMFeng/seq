import random
from math import inf as INF

init = array[u64](4)
init[0] = u64(0x123)
init[1] = u64(0x234)
init[2] = u64(0x345)
init[3] = u64(0x456)
length = 4

rand_gen = random.Generator()
rand_o = random.Random(rand_gen)

# rand_o.seed()

def random():
    print rand_o.random()
    print rand_o.random()
    print rand_o.random()
# random()

def uniform():
    print rand_o.uniform(0, 100)
    print rand_o.uniform(0, 100)
    print rand_o.uniform(0, 100)
# uniform()

def triangular():
    print rand_o.triangular(0.0, 1.0)
    print rand_o.triangular(0.0, 1.0)
    print rand_o.triangular(0.0, 1.0)
# triangular()

def from_bytes_big():
    print rand_o.from_bytes_big([u64(250), u64(0), u64(0)])
    print rand_o.from_bytes_big(init)
# from_bytes_big()

def getrandbits():
    print rand_o.getrandbits(0)
    print rand_o.getrandbits(3)
    print rand_o.getrandbits(9)
    print rand_o.getrandbits(9)
    print rand_o.getrandbits(9)
    print rand_o.getrandbits(33)
    print rand_o.getrandbits(33)
    print rand_o.getrandbits(33)
# getrandbits()

def bit_length():
    print rand_o.bit_length(u64(7))
    print rand_o.bit_length(u64(8))
    print rand_o.bit_length(u64(9))
    print rand_o.bit_length(u64(16))
    print rand_o.bit_length(u64(31))
    print rand_o.bit_length(u64(32))
# bit_length()

def _randbelow_with_getrandbits():
    print rand_o._randbelow_with_getrandbits(3)
    print rand_o._randbelow_with_getrandbits(3)
    print rand_o._randbelow_with_getrandbits(3)
    print rand_o._randbelow_with_getrandbits(3)
    print rand_o._randbelow_with_getrandbits(3)
    print rand_o._randbelow_with_getrandbits(3)
    print rand_o._randbelow_with_getrandbits(3)
    print rand_o._randbelow_with_getrandbits(3)
    print rand_o._randbelow_with_getrandbits(45)
    print rand_o._randbelow_with_getrandbits(45)
    print rand_o._randbelow_with_getrandbits(45)
    print rand_o._randbelow_with_getrandbits(45)
    print rand_o._randbelow_with_getrandbits(45)
    print rand_o._randbelow_with_getrandbits(45)
    print rand_o._randbelow_with_getrandbits(45)
    print rand_o._randbelow_with_getrandbits(45)
# _randbelow_with_getrandbits()

def randrange1():
    #randrange(stop)
    print rand_o.randrange(3, 0, 1)
    print rand_o.randrange(3, 0, 1)
    print rand_o.randrange(3, 0, 1)
    print rand_o.randrange(66, 0, 1)
    print rand_o.randrange(66, 0, 1)
    print rand_o.randrange(66, 0, 1)
    print rand_o.randrange(1000, 0, 1)
    print rand_o.randrange(1000, 0, 1)
    print rand_o.randrange(1000, 0, 1)
# randrange1()

def randrange2():
# randrange(start, stop[, step])
    print rand_o.randrange(3, 8, 1)
    print rand_o.randrange(3, 8, 1)
    print rand_o.randrange(3, 8, 1)
    print rand_o.randrange(66, 1000, 1)
    print rand_o.randrange(66, 1000, 1)
    print rand_o.randrange(66, 1000, 1)
    print rand_o.randrange(1000, 2000, 2)
    print rand_o.randrange(1000, 2000, 2)
    print rand_o.randrange(1000, 2000, 2)
# randrange2()

def randint():
    print rand_o.randint(2, 200)
    print rand_o.randint(2, 200)
    print rand_o.randint(2, 200)
    print rand_o.randint(2, 200)
    print rand_o.randint(2, 100)
    print rand_o.randint(2, 100)
    print rand_o.randint(2, 100)
    print rand_o.randint(2, 100)
# randint()

li1 = ['a', 'b', 'c', 'd', 'e', 'f']
li2 = [1, 2, 3, 4, 5, 6]
def choice():
    print rand_o.choice(li1)
    print rand_o.choice(li1)
    print rand_o.choice(li1)
    print rand_o.choice(li1)
    print rand_o.choice(li1)
    print rand_o.choice(li2)
    print rand_o.choice(li2)
    print rand_o.choice(li2)
    print rand_o.choice(li2)
    print rand_o.choice(li2)
# choice()

def shuffle():
    rand_o.shuffle(li1)
    print li1
    rand_o.shuffle(li1)
    print li1
    rand_o.shuffle(li1)
    print li1
    rand_o.shuffle(li2)
    print li2
    rand_o.shuffle(li2)
    print li2
    rand_o.shuffle(li2)
    print li2
# shuffle()

def gammavariate():
    # alpha > 1
    print rand_o.gammavariate(3.0, 2.0)
    print rand_o.gammavariate(3.0, 2.0)
    # alpha = 1
    print rand_o.gammavariate(1.0, 1.0)
    print rand_o.gammavariate(1.0, 1.0)
    # 0 < alpha < 1
    print rand_o.gammavariate(0.4, 0.3)
    print rand_o.gammavariate(0.4, 0.3)
    # alpha <= 0
    print rand_o.gammavariate(0.0, 0.0)
# gammavariate()

def betavariate():
    print rand_o.betavariate(2.71828, 3.14159)
    print rand_o.betavariate(2.71828, 3.14159)
    print rand_o.betavariate(3.0, 3.0)
    print rand_o.betavariate(3.0, 3.0)
    print rand_o.betavariate(1.0, 1.0)
    print rand_o.betavariate(1.0, 1.0)
    print rand_o.betavariate(1.0, 1.0)
    print rand_o.betavariate(0.0, 1.0)
# betavariate()

def expovariate():
    print rand_o.expovariate(1.0)
    print rand_o.expovariate(1.0)
    print rand_o.expovariate(1.0)
    print rand_o.expovariate(0.2)
    print rand_o.expovariate(0.2)
    print rand_o.expovariate(0.2)
    print rand_o.expovariate(-0.2)
    print rand_o.expovariate(-0.2)
    print rand_o.expovariate(-0.2)
    assert rand_o.expovariate(INF) == 0
    assert rand_o.expovariate(-INF) == -0
    print rand_o.expovariate(0.0)
# expovariate()

def gauss():
    print rand_o.gauss(-1.0, 0.5)
    print rand_o.gauss(1.0, -0.5)
    print rand_o.gauss(1.0, 0.5)
    print rand_o.gauss(1.0, 0.5)
    print rand_o.gauss(1.0, 0.5)
    print rand_o.gauss(0.0, 1.0)
    print rand_o.gauss(0.0, 1.0)
    print rand_o.gauss(0.0, 1.0)
    assert rand_o.gauss(INF, 1.0) == INF
    assert rand_o.gauss(-INF, 1.0) == -INF
# gauss()

def paretovariate():
    print rand_o.paretovariate(1.0)
    print rand_o.paretovariate(1.0)
    print rand_o.paretovariate(2.0)
    print rand_o.paretovariate(2.0)
    print rand_o.paretovariate(4.0)
    print rand_o.paretovariate(4.0)
# paretovariate()

def weibullvariate():
    print rand_o.weibullvariate(1.0, 1.0)
    print rand_o.weibullvariate(1.0, 1.0)
    print rand_o.weibullvariate(1.0, 3.0)
    print rand_o.weibullvariate(1.0, 3.0)
    assert rand_o.weibullvariate(1.0, -INF) == 1
    assert rand_o.weibullvariate(1.0, INF) == 1
    assert rand_o.weibullvariate(-INF, 1.0) == -INF
    assert rand_o.weibullvariate(INF, 1.0) == INF
# weibullvariate()

def normalvariate():
    print rand_o.normalvariate(0.0, 1.0)
    print rand_o.normalvariate(0.0, 1.0)
    assert rand_o.normalvariate(INF, 1.0) == INF
    assert rand_o.normalvariate(-INF, 1.0) == -INF
    assert rand_o.normalvariate(0.0, INF) == INF
    assert rand_o.normalvariate(0.0, -INF) == -INF
    assert rand_o.normalvariate(10.0, 0.0) == 10.0
    assert rand_o.normalvariate(10.0, 0.0) == 10.0
# normalvariate()

def lognormvariate():
    print rand_o.lognormvariate(0.0, 1.0)
    print rand_o.lognormvariate(0.0, 1.0)
    assert rand_o.lognormvariate(0.0, 0.0) == 1.0
    assert rand_o.lognormvariate(-INF, 0.0) == 0.0
    assert rand_o.lognormvariate(INF, 0.0) == INF
lognormvariate()

# print rand_gen.genrand_int32()
# print rand_gen.genrand_int32()

# print rand_o.shuffle([3, 2, 4, 5])
# print rand_o.gen.gettimeofday()
# print rand_o.gen.gettimeofday()

# gauss = rand_o.gauss
#
# rand_obj = Generator()
# # rand_obj.init_by_array(init, length)
# rand_obj.genrand_res53()
