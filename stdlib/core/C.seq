
# Seq runtime functions
cimport seq_alloc(int) -> cobj
cimport seq_alloc_atomic(int) -> cobj
cimport seq_realloc(cobj, int) -> cobj
cimport seq_free(cobj)
cimport seq_gc_add_roots(cobj, cobj)
cimport seq_gc_remove_roots(cobj, cobj)
cimport seq_gc_clear_roots()
cimport seq_gc_exclude_static_roots(cobj, cobj)
cimport seq_strdup(cobj) -> str
cimport seq_check_errno() -> str

# <string.h>
cimport strtoll(cobj, ptr[cobj], i32) -> int
cimport strtod(cobj, ptr[cobj]) -> float

# <ctype.h>
cimport isdigit(int) -> int
cimport isspace(int) -> int
cimport isupper(int) -> int
cimport islower(int) -> int
cimport toupper(int) -> int
cimport tolower(int) -> int
cimport isalnum(int) -> int
cimport isalpha(int) -> int
cimport istitle(int) -> int

# <math.h>
cimport ceil(float) -> float
cimport floor(float) -> float
cimport fabs(float) -> float
cimport fmod(float, float) -> float
cimport exp(float) -> float
cimport expm1(float) -> float
cimport ldexp(float, int) -> float
cimport log(float) -> float
cimport log2(float) -> float
cimport log10(float) -> float
cimport sqrt(float) -> float
cimport pow(float, float) -> float
cimport round(float) -> float
cimport acos(float) -> float
cimport asin(float) -> float
cimport atan(float) -> float
cimport atan2(float, float) -> float
cimport cos(float) -> float
cimport sin(float) -> float
cimport tan(float) -> float
cimport cosh(float) -> float
cimport sinh(float) -> float
cimport tanh(float) -> float
cimport acosh(float) -> float
cimport asinh(float) -> float
cimport atanh(float) -> float
cimport copysign(float, float) -> float
cimport log1p(float) -> float
cimport trunc(float) -> float
cimport log2(float) -> float
cimport erf(float) -> float
cimport erfc(float) -> float
cimport gamma(float) -> float
cimport lgamma(float) -> float
cimport remainder(float, float) -> float
cimport frexp(float, ptr[int]) -> float
cimport modf(float, ptr[float]) -> float

# <stdio.h>
cimport ferror(cobj) -> i32
cimport fgetc(cobj) -> i32
cimport fopen(cobj, cobj) -> cobj
cimport fclose(cobj) -> int
cimport fwrite(cobj, int, int, cobj) -> int
cimport ftell(cobj) -> int
cimport fseek(cobj, int, i32) -> i32

# <dlfcn.h>
cimport dlerror() -> cobj
cimport dlopen(cobj, int) -> cobj
cimport dlsym(cobj, cobj) -> cobj
RTLD_NOW = 2
RTLD_GLOBAL = 8

# <zlib.h>
cimport gzopen(cobj, cobj) -> cobj
cimport gzerror(cobj, ptr[i32]) -> cobj
cimport gzgetc(cobj) -> i32
cimport gzclose(cobj) -> int
cimport gzread(cobj, cobj, u32) -> i32
cimport gzwrite(cobj, cobj, i32) -> i32
cimport gztell(cobj) -> int
cimport gzseek(cobj, int, i32) -> int
