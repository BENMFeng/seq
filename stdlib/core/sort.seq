
from algorithms.timsort import tim_sort, tim_sort_inplace

def default_compare[K](a: K, b: K) -> bool:
    return a < b

def sorted[K](v: generator[K], compare: optional[function[bool, K, K]] = None):
    """
    sorted(v)

    Return a sorted list of the elements in v
    """
    cmp = ~compare if compare else default_compare[K]
    return tim_sort(v, cmp)

extend list[T]:
    def sort(self: list[T], compare: optional[function[bool, T, T]] = None):
        cmp = ~compare if compare else default_compare[T]
        tim_sort_inplace(self, cmp)
