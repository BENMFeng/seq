from algorithms.timsort import tim_sort, tim_sort_inplace

@deduceall
def sorted[S,T](v: generator[T], key: optional[function[S,T]] = None):
    """
    sorted(v)

    Return a sorted list of the elements in v
    """
    def ident[T](x: T):
        return x
    if key:
        f = ~key
        return tim_sort(v, f)
    else:
        f = ident[T]
        return tim_sort(v, f)

extend list[T]:
    @deduceall
    def sort[S](self: list[T], key: optional[function[S,T]] = None):
        def ident[T](x: T):
            return x
        if key:
            f = ~key
            tim_sort_inplace(self, f)
        else:
            f = ident[T]
            tim_sort_inplace(self, f)
