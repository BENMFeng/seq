type range(lo: int, hi: int)
extend range:
    def __init__(self: range, lo: int, hi: int) -> range:
        return (lo, hi)

    def __init__(self: range, hi: int) -> range:
        return (0, hi)

    def __iter__(self: range):
        lo = self.lo
        hi = self.hi
        i = lo
        while i < hi:
            yield i
            i += 1

def len(x):
    return x.__len__()

def iter(x):
    return x.__iter__()

def copy(x):
    return x.__copy__()

def abs(x):
    return x.__abs__()

def hash(x):
    return x.__hash__()

def any(x):
    for a in x:
        if a:
            return True
    return False

def all(x):
    for a in x:
        if not a:
            return False
    return True

def enum(x):
    i = 0
    for a in x:
        yield (i,a)
        i += 1

def filter(f, x):
    for a in x:
        if f(a):
            yield a

def echo(x):
    print x

extend int:
    def __hash__(self: int):
        return self

import list
import dict
import set
