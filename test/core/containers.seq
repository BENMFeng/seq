# lists:
l1 = [i+1 for i in range(100)]
print len(l1)  # EXPECT: 100
l1 = l1[98:]
l2 = [1, 2] * 2

# EXPECT: 99
# EXPECT: 100
for a in l1:
    print a

# EXPECT: 1
# EXPECT: 2
# EXPECT: 1
# EXPECT: 2
for a in l2:
    print a

l1 = [i*2 for i in range(3)]
l1.insert(0, 99)
l1[0] += 1
del l1[1]

# EXPECT: 100
# EXPECT: 2
# EXPECT: 4
for a in l1[0:3]:
    print a

l3 = [1, 2, 3]
print l3.remove(2)           # EXPECT: True
print l3.remove(2)           # EXPECT: False
print l3                     # EXPECT: [1, 3]
print list[int]().remove(0)  # EXPECT: False

l4 = [5, 1, 4, 2, 1, -10, 10, 100, -100]
print sorted(l4)  # EXPECT: [-100, -10, 1, 1, 2, 4, 5, 10, 100]
l4.sort()
print l4  # EXPECT: [-100, -10, 1, 1, 2, 4, 5, 10, 100]
print sorted(list[int]())  # EXPECT: []


# sets:
s1 = {a for a in range(100)}
print len(s1)  # EXPECT: 100
s1 = {a%8 for a in range(100)}
for a in range(8):
    if a not in s1:
        print "fail"

for a in range(8,100):
    if a in s1:
        print "fail"

print 5 in s1  # EXPECT: True
s1.remove(5)
print 5 in s1  # EXPECT: False
print len(s1)  # EXPECT: 7

s1 = {1,2,3,4}
s2 = {2,3,4,5}
s3 = set[int]()

print s1 | s2       # EXPECT: {1, 2, 3, 4, 5}
print s1 & s2       # EXPECT: {4, 2, 3}
print s1 ^ s2       # EXPECT: {1, 5}
print s1 | s3       # EXPECT: {1, 2, 3, 4}
print s1 & s3       # EXPECT: {}
print s1 ^ s3       # EXPECT: {1, 2, 3, 4}
print s1 - s2       # EXPECT: {1}
print s2 - s1       # EXPECT: {5}
print s3 - s1 - s2  # EXPECT: {}
print s1 > s2       # EXPECT: False
print s1 < s2       # EXPECT: False
print s3 <= s1      # EXPECT: True
print s2 >= s1      # EXPECT: False
print (s1 | s2) > s1  # EXPECT: True

s1c = copy(s1)
s2c = copy(s2)
s3c = copy(s3)

print s1c  # EXPECT: {1, 2, 3, 4}
s1c &= s2c
print s1c  # EXPECT: {2, 3, 4}
s1c -= s3c
print s1c  # EXPECT: {2, 3, 4}
s1c ^= s1c
print s1c  # EXPECT: {}
s1c |= s2c
print s1c  # EXPECT: {2, 3, 4, 5}
print s1   # EXPECT: {1, 2, 3, 4}


# dicts:
d1 = {a: a*a for a in range(100)}
print len(d1)  # EXPECT: 100
d1 = {a: a*a for a in range(5)}

# EXPECT: 0
# EXPECT: 1
# EXPECT: 4
# EXPECT: 9
# EXPECT: 16
# EXPECT: -1
for a in range(6):
    print d1.get(a, -1)

print 2 in d1        # EXPECT: True
del d1[2]
print 2 in d1        # EXPECT: False
d1[2] = 44
print 2 in d1        # EXPECT: True
print d1.get(2, -1)  # EXPECT: 44
print d1[3]          # EXPECT: 9

del d1[3]
del d1[4]

# EXPECT: 0
# EXPECT: 1
# EXPECT: 2
for k in d1:
    print k

# EXPECT: 0 0
# EXPECT: 1 1
# EXPECT: 2 44
for t in d1.items():
    print t[0], t[1]


# deque:
from collections import deque

dq = deque[int]()
dq.append(1)
dq.append(2)
dq.append(3)
dq.appendleft(11)
dq.appendleft(22)
print dq  # EXPECT: [22, 11, 1, 2, 3]
print bool(dq)  # EXPECT: True

# test cap increase:
dq.clear()
print bool(dq)  # EXPECT: False
for i in range(20):
    dq.append(i)
    dq.appendleft(i)
print dq  # EXPECT: [19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
print len(dq)  # EXPECT: 40

for i in range(19):
    dq.pop()
    dq.popleft()
print dq  # EXPECT: [0, 0]
for a in dq:
    # EXPECT: 0
    # EXPECT: 0
    print a

print 0 in dq  # EXPECT: True
print 1 in dq  # EXPECT: False
print copy(dq)  # EXPECT: [0, 0]

# test maxlen:
dq = deque[int](5)
for i in range(100):
    dq.append(i)
print dq  # EXPECT: [95, 96, 97, 98, 99]

for i in range(5):
    dq.append(i)
print dq  # EXPECT: [0, 1, 2, 3, 4]
