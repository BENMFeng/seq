# this is a comment

fun f s: Seq -> Seq[]
  s |> split 32 32 |> collect
end

source args[0]:
  | substr 0+1 5 |> print
  let v = | f()  # inline comment
  v |> foreach |> (count, _) |> {
    | .1 |> print
    | .2 |> print
  }
  | print

  let arr = {Int, Seq}[10]
  arr |> foreach

  | print
  | split 64 64 |> {
    let v1 = | print
    v1 |> split 32 32 |> {
      let v2 = | print
      | split 16 16 |> {
        | print
        let v3 = | copy |> print
        let v4 = v3 |> print
        v3 |> print
      }
      v2 |> print
    }
    | print
  }
  | print

  (v[1], ((v)[2]), (v[1], 4.2)).3 |> .1 |> print
end

fun hello
  "hello world" |> print
end

| hello()
42 + 2.2 |> print
-13 |> print
var x = 4.2
x |> print
x = .42
if x < 1 then -x else +x |> print
var b = (true, !true)
b.1 |> print
b.2 = !!false
b.2 |> print

fun fib n: Int -> Int
  var m = 0
  if n <= 1:
    m = n
  else:
    let a = n-1 |> fib()
    let b = n-2 |> fib()
    m = a + b
  end
  m |> .  # function output
end

10 |> fib() |> print

| range (if b.1 then 1 else 2) 5+5 |> print
