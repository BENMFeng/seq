from secure.types import *
from secure.mpc import *

S = MPC([(0,1),(0,2),(1,2)], __cp__)

# extern c ZP_setup()
# ZP_setup()

a, b = 7z, 3z
print a, b

x = Vec([1z, 2z, 3z, 4z, 5z])
y = Vec([9z, 8z, 7z, 6z, 5z]) 
print x, y

print 'START SECRET SHARING'

print MInt.random(0)
print CP0, CP1, CP2, CP

# q = S.share(a)
# b = S.share(b)
# S.switch_seed(1 if CP0 else 0)
# r = MInt.random(len(a))
# S.restore_seed()
# print r

# secure:
# 	print a, b

# print a, b
# print a + 5z, a * 5z

# print a + b, a - b
# print a * b

# print x, y
# print x * 5z, x * y

# print x.matmul_secure(y)
# print x.sh, y.sh

# z = a * b
# print '>>', z, __mpc_env__.reveal(z.share)

# __mpc__.cleanup()

