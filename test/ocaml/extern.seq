# 786

a = 5
b = 3
print a, b

def foo(x):
    # print a, b
    global a
    a = 6
    if True:
        c = 7
    print a, x

def bar(x):
    global a
    print a

foo(100)
bar(1)
print a, b
# print a+"x"

y = (a + 1 + i for i in [1,2,3,4,5])

# class Exc(msg: str):
#     def yodel(self):
#         print 'Yodel-oh-ee-dee-ay-dee', self.msg
#     pass
# try:
#     print 'try'
#     raise Exc('suisse')
# except Exc as e:
#     print 'ooops', e.msg
# raise Exc('woof')


# for i in [1,2,3,4,5]:
#    print i

# print [1<<a for a in [1,2,3,4,5]]

# d = {1: "2", 3: "4", 5: "6"}
# print d

# j = {a: a+1 for a in d}
# for k, v in j.items():
#    print 'dict', k, v

# j := {a: [i for i in range(0, a)] for a in d}
# print j
# # for a in j.items():
# #    print 'dict--', a[0], len(a[1])
# #    for ii in a[1]:
# #       print '   ii', ii

# e = {1,2,3,4,5, 5}
# print e, {i*2 for i in e}

# for i in [1,2,3,4,5]:
#     for j in [1,2,3,4,5]:
#         if i==j:
#             print 'init', i*j

# print [i for i in [1,2,3]]
# print [i+j for i in [1,2,3,4,5] for j in [5,4,3,2,1] if i==j]

# for i, j in d.iteritems():
#     print i, j

# print {a*10+i:b for a,b in d.iteritems() for i in [1,2,3,4,5]}



# class A():
#     def foo[`s](s: `s):
#         print s
# A.foo[int](10)  # error: cannot find method '__getitem__' for type 'function[void,`s]' with specified argument types (int)
# A().foo[int](10)  # similar error


